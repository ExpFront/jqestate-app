'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactMaskedinput = require('react-maskedinput');

var _reactMaskedinput2 = _interopRequireDefault(_reactMaskedinput);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var Input = function Input() {
  var styles = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
  return function (_ref) {
    var _anotherClass;

    var className = _ref.className;
    var valueClassName = _ref.valueClassName;
    var kind = _ref.kind;
    var value = _ref.value;
    var mask = _ref.mask;
    var block = _ref.block;
    var type = _ref.type;

    var rest = _objectWithoutProperties(_ref, ['className', 'valueClassName', 'kind', 'value', 'mask', 'block', 'type']);

    var anotherClass = (_anotherClass = {}, _defineProperty(_anotherClass, styles[kind], !!kind), _defineProperty(_anotherClass, styles.block, !!block), _defineProperty(_anotherClass, styles[type], !!type), _defineProperty(_anotherClass, styles[valueClassName], value || value === 0), _anotherClass);

    if (mask) {
      return _react2.default.createElement(_reactMaskedinput2.default, _extends({}, rest, { value: value, className: (0, _classnames2.default)(styles.formControl, anotherClass, className) }));
    } else {
      return _react2.default.createElement('input', _extends({}, rest, { className: (0, _classnames2.default)(styles.formControl, anotherClass, className) }));
    }
  };
};

exports.default = Input;